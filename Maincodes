package org.example.service;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.example.model.MergedEntity;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class FinanceChService {

    @Value("${api.financech.url}")
    private String financeChUrl;

    @Value("${api.financech.token}")
    private String financeChToken;

    private final RestTemplate restTemplate;
    private final ObjectMapper objectMapper;

    public FinanceChService(RestTemplate restTemplate, ObjectMapper objectMapper) {
        this.restTemplate = restTemplate;
        this.objectMapper = objectMapper;
    }

    public MergedEntity fetchAndStoreFinanceData() {
        try {
            // Prepare header
            HttpHeaders headers = new HttpHeaders();
            String[] tokenParts = financeChToken.split(":", 2);
            headers.set(tokenParts[0].trim(), tokenParts[1].trim());

            HttpEntity<String> entity = new HttpEntity<>(headers);

            // Call external API
            ResponseEntity<String> response = restTemplate.exchange(
                    financeChUrl,
                    HttpMethod.GET,
                    entity,
                    String.class
            );

            // Convert to JsonNode
            JsonNode data = objectMapper.readTree(response.getBody());
            MergedEntity mergedEntity = new MergedEntity();
            mergedEntity.setFinanceData(data);
            return mergedEntity;

        } catch (Exception e) {
            throw new RuntimeException("Failed to fetch/parse API response", e);
        }
    }
}
