PHASE 1 Basics

Creating a Spring Boot project using Spring Initializr

Maven and Gradle build tools

Annotations

Profiles and environment-specific configurations

@getmapping, @postmapping, @putmapping, @deletemapping

Handling path variables and request parameters

Setting up database connection (h2, mysql, postgresql)

Using jparepository and crudrepository

Introduction to spring boot devtools

Enabling hot reloading

Spring batch, scheduling, and cron expressions

PHASE 2 - Intermediate

Using @controlleradvice and @exceptionhandler

Custom error responses and exception classes

Global exception handling

Basic authentication

Configuring security for APIs

Implementing JWT (JSON Web Tokens) for stateless authentication
Introduction to HATEOAS

Versioning rest apis (uri, parameter, headers)

Unit testing with JUnit and Mockito

Writing integration tests with Spring Boot Test

Testing RESTful services with mockmvc

Exploring actuator endpoints

Creating custom health indicators

PHASE 3 - Advanced

Using @profile annotation

Configuring environment-specific beans

Switching profiles for different environments

Setting up a Spring Cloud project

Key components of Spring Cloud

Setting up the Eureka server

Registering microservices with Eureka

Service discovery in action

Introduction to api gateway

Setting up Spring Cloud Gateway

Configuring routes and filters

Setting up Spring Cloud Config server

Managing configuration in a centralized repository

Configuring Spring Boot applications to use the config server

PHASE 4 - Microservices
Introduction to inter-service communication

Using resttemplate for synchronous communication

Using feign client for simplified service calls

Setting up resilience4j

Configuring circuit breakers, retry in microservices

Introduction to distributed tracing
