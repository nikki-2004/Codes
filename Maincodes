@Service
public class DataService {

    private final RestTemplate restTemplate;
    private final ObjectMapper mapper = new ObjectMapper();

    @Value("${auth.token.url}")
    private String authTokenUrl;

    // üîê Auto-stored token
    private String token;

    public DataService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    /**
     * ‚úÖ Fetches token from URL and stores it in `token` field
     */
    private void fetchAuthToken() {
        try {
            // You can change this to POST if needed
            HttpHeaders headers = new HttpHeaders();
            headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));

            HttpEntity<Void> request = new HttpEntity<>(headers);
            ResponseEntity<String> response = restTemplate.exchange(authTokenUrl, HttpMethod.GET, request, String.class);

            System.out.println("üîê Token Response Body: " + response.getBody());

            JsonNode json = mapper.readTree(response.getBody());
            this.token = json.path("token").asText(); // ‚úÖ store the token value

            System.out.println("‚úÖ Token fetched and stored: " + this.token);

        } catch (Exception e) {
            throw new RuntimeException("‚ùå Failed to fetch token: " + e.getMessage(), e);
        }
    }

    /**
     * ‚úÖ Fetch merged entities using the stored token
     */
    public List<MergedEntity> getMergedEntities() {
        List<MergedEntity> mergedList = new ArrayList<>();

        try {
            // Step 1: Get token first
            fetchAuthToken(); // sets token

            // Step 2: Use token in request
            HttpHeaders headers = new HttpHeaders();
            headers.setBearerAuth(this.token); // ‚úÖ use token here
            headers.set("Accept", "*/*; version-gamma");

            HttpEntity<String> request = new HttpEntity<>(headers);

            // Example fetch
            String financeUrl = "https://your-api.com/v1/finance"; // replace with actual
            ResponseEntity<String> response = restTemplate.exchange(financeUrl, HttpMethod.GET, request, String.class);

            // parse response and build merged list here (dummy below)
            System.out.println("‚úÖ Data fetch success: " + response.getBody());

        } catch (Exception e) {
            System.err.println("‚ùå Error retrieving merged entities: " + e.getMessage());
            e.printStackTrace();
        }

        return mergedList;
    }
}
